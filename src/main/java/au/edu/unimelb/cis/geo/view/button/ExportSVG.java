/*
 * Copyright (c) 2020, Sameera Kannangara (dlskannangara@gmail.com) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package au.edu.unimelb.cis.geo.view.button;

import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.batik.svggen.SVGGraphics2DIOException;
import org.geotools.geometry.jts.ReferencedEnvelope;
import org.geotools.map.MapContent;
import org.geotools.swing.JMapFrame;
import org.geotools.swing.action.SafeAction;
import org.w3c.dom.Document;

import javax.swing.*;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.*;
import java.nio.charset.StandardCharsets;

public class ExportSVG extends SafeAction {

    private JMapFrame mapFrame;
    private MapContent map;

    public ExportSVG(JMapFrame mapFrame, MapContent map) {
        super("ExportSVG");
        putValue(Action.SHORT_DESCRIPTION, "Exports the visible map as a SVG file.");
        this.mapFrame = mapFrame;
        this.map = map;
    }

    @Override
    public void action(ActionEvent actionEvent) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");

        int userSelection = fileChooser.showSaveDialog(mapFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            try {
                exportToSVG(fileToSave);
            } catch (ParserConfigurationException pe) {
                String msg = "Error:" + fileToSave.getName() + " was not exported!";
                JOptionPane.showMessageDialog(null, msg, "SVG exporting",
                        JOptionPane.ERROR_MESSAGE);
            }

//            System.out.println("INFO: Save as file: " + fileToSave.getAbsolutePath());
        }
    }

    public void exportToSVG(File file)
            throws ParserConfigurationException {

//            java.awt.Dimension canvasSize = jframe.getMapPane().getSize();
        Document doc;

        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        DocumentBuilder db;

        db = dbf.newDocumentBuilder();

        // Create an instance of org.w3c.dom.Document
        doc = db.getDOMImplementation().createDocument(null, "svg", null);

        // Set up the map
        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(doc);
        ctx.setComment("Generated by GeoTools with Batik SVG Generator");

        SVGGraphics2D g2d = new SVGGraphics2D(ctx, true);

        g2d.setSVGCanvasSize(mapFrame.getMapPane().getSize());

        Rectangle outputArea = new Rectangle(g2d.getSVGCanvasSize());
        ReferencedEnvelope dataArea = map.getViewport().getBounds();

        mapFrame.getMapPane().getRenderer().paint(g2d, outputArea, dataArea);
        OutputStreamWriter osw = null;

        try {
            OutputStream out = new FileOutputStream(file);
            osw = null;

            osw = new OutputStreamWriter(out, StandardCharsets.UTF_8);
            g2d.stream(osw);

        } catch (FileNotFoundException |
                SVGGraphics2DIOException ex) {
            System.err.println("IOException found: " + ex);
        } finally {
            if (osw != null) {
                try {
                    osw.close();
                } catch (IOException ex) {
                    System.err.println("IOException found: " + ex);
                }
            }
        }
    }
}
